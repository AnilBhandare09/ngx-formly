webpackJsonp([7],{"98XN":function(n,a){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component<span class="token punctuation" >,</span> ViewChild<span class="token punctuation" >,</span> ViewContainerRef <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FieldWrapper <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-wrapper-panel\'</span><span class="token punctuation" >,</span>\n  template<span class="token punctuation" >:</span> `\n    <span class="token operator" >&lt;</span>div <span class="token keyword" >class</span><span class="token operator" >=</span><span class="token string" >"card"</span><span class="token operator" >></span>\n      <span class="token operator" >&lt;</span>h3 <span class="token keyword" >class</span><span class="token operator" >=</span><span class="token string" >"card-header"</span><span class="token operator" >></span><span class="token punctuation" >{</span><span class="token punctuation" >{</span> to<span class="token punctuation" >.</span>label <span class="token punctuation" >}</span><span class="token punctuation" >}</span><span class="token operator" >&lt;</span><span class="token operator" >/</span>h3<span class="token operator" >></span>\n      <span class="token operator" >&lt;</span>div <span class="token keyword" >class</span><span class="token operator" >=</span><span class="token string" >"card-body"</span><span class="token operator" >></span>\n        <span class="token operator" >&lt;</span>ng<span class="token operator" >-</span>container #fieldComponent<span class="token operator" >></span><span class="token operator" >&lt;</span><span class="token operator" >/</span>ng<span class="token operator" >-</span>container<span class="token operator" >></span>\n      <span class="token operator" >&lt;</span><span class="token operator" >/</span>div<span class="token operator" >></span>\n    <span class="token operator" >&lt;</span><span class="token operator" >/</span>div<span class="token operator" >></span>\n  `<span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >PanelWrapperComponent</span> <span class="token keyword" >extends</span> <span class="token class-name" >FieldWrapper</span> <span class="token punctuation" >{</span>\n  @<span class="token function" >ViewChild</span><span class="token punctuation" >(</span><span class="token string" >\'fieldComponent\'</span><span class="token punctuation" >,</span> <span class="token punctuation" >{</span>read<span class="token punctuation" >:</span> ViewContainerRef<span class="token punctuation" >}</span><span class="token punctuation" >)</span> fieldComponent<span class="token punctuation" >:</span> ViewContainerRef<span class="token punctuation" >;</span>\n<span class="token punctuation" >}</span>'},FkJy:function(n,a){n.exports="import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-panel',\n  template: `\n    <div class=\"card\">\n      <h3 class=\"card-header\">{{ to.label }}</h3>\n      <div class=\"card-body\">\n        <ng-container #fieldComponent></ng-container>\n      </div>\n    </div>\n  `,\n})\nexport class PanelWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n}"},MBTx:function(n,a){n.exports='<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>form</span> <span class="token attr-name" >[formGroup]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span> <span class="token attr-name" >(ngSubmit)</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit()<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>formly-form</span> <span class="token attr-name" >[model]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>model<span class="token punctuation" >"</span></span> <span class="token attr-name" >[fields]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>fields<span class="token punctuation" >"</span></span> <span class="token attr-name" >[options]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>options<span class="token punctuation" >"</span></span> <span class="token attr-name" >[form]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>button</span> <span class="token attr-name" >type</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit<span class="token punctuation" >"</span></span> <span class="token attr-name" >class</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>btn btn-primary submit-button<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>Submit<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>button</span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>formly-form</span><span class="token punctuation" >></span></span>\n<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>form</span><span class="token punctuation" >></span></span>\n'},PfTj:function(n,a){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nimport { PanelWrapperComponent } from './panel-wrapper.component';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      wrappers: [\n        { name: 'panel', component: PanelWrapperComponent },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n    PanelWrapperComponent,\n  ],\n})\nexport class AppModule { }\n"},SjSo:function(n,a){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'firstName',\n      type: 'input',\n      templateOptions: {\n        required: true,\n        type: 'text',\n        label: 'First Name',\n      },\n    },\n    {\n      key: 'address',\n      wrappers: ['panel'],\n      templateOptions: { label: 'Address' },\n      fieldGroup: [{\n        key: 'town',\n        type: 'input',\n        templateOptions: {\n          required: true,\n          type: 'text',\n          label: 'Town',\n        },\n      }],\n    },\n  ];\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n"},YbIr:function(n,a){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormGroup <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFormOptions<span class="token punctuation" >,</span> FormlyFieldConfig <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-app-example\'</span><span class="token punctuation" >,</span>\n  templateUrl<span class="token punctuation" >:</span> <span class="token string" >\'./app.component.html\'</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppComponent</span> <span class="token punctuation" >{</span>\n  form <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >FormGroup</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  model<span class="token punctuation" >:</span> <span class="token keyword" >any</span> <span class="token operator" >=</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  options<span class="token punctuation" >:</span> FormlyFormOptions <span class="token operator" >=</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n\n  fields<span class="token punctuation" >:</span> FormlyFieldConfig<span class="token punctuation" >[</span><span class="token punctuation" >]</span> <span class="token operator" >=</span> <span class="token punctuation" >[</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'firstName\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        required<span class="token punctuation" >:</span> <span class="token keyword" >true</span><span class="token punctuation" >,</span>\n        type<span class="token punctuation" >:</span> <span class="token string" >\'text\'</span><span class="token punctuation" >,</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'First Name\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'address\'</span><span class="token punctuation" >,</span>\n      wrappers<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token string" >\'panel\'</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span> label<span class="token punctuation" >:</span> <span class="token string" >\'Address\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      fieldGroup<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token punctuation" >{</span>\n        key<span class="token punctuation" >:</span> <span class="token string" >\'town\'</span><span class="token punctuation" >,</span>\n        type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n        templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n          required<span class="token punctuation" >:</span> <span class="token keyword" >true</span><span class="token punctuation" >,</span>\n          type<span class="token punctuation" >:</span> <span class="token string" >\'text\'</span><span class="token punctuation" >,</span>\n          label<span class="token punctuation" >:</span> <span class="token string" >\'Town\'</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n  <span class="token function" >submit</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>form<span class="token punctuation" >.</span>valid<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token function" >alert</span><span class="token punctuation" >(</span>JSON<span class="token punctuation" >.</span><span class="token function" >stringify</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'},eGrs:function(n,a){n.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form">\n    <button type="submit" class="btn btn-primary submit-button">Submit</button>\n  </formly-form>\n</form>\n'},m6Z4:function(n,a,s){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var t=s("WT6e"),p=s("7DMc"),o=function(){function n(){this.form=new p.FormGroup({}),this.model={},this.options={},this.fields=[{key:"firstName",type:"input",templateOptions:{required:!0,type:"text",label:"First Name"}},{key:"address",wrappers:["panel"],templateOptions:{label:"Address"},fieldGroup:[{key:"town",type:"input",templateOptions:{required:!0,type:"text",label:"Town"}}]}]}return n.prototype.submit=function(){this.form.valid&&alert(JSON.stringify(this.model))},n}(),e={examples:[{title:"Nested Forms (fieldGroup wrapper)",description:"\n              This example demonstrates how to nest formly-form's using custom templates\n            ",component:o,files:[{file:"app.component.html",content:s("MBTx"),filecontent:s("eGrs")},{file:"app.component.ts",content:s("YbIr"),filecontent:s("SjSo")},{file:"panel-wrapper.component.ts",content:s("98XN"),filecontent:s("FkJy")},{file:"app.module.ts",content:s("pDzE"),filecontent:s("PfTj")}]}]},l=function(){},c=s("INQx"),u=s("cPG/"),i=s("OGTa"),r=s("z4JO"),m=s("WhiG"),k=s("XPYZ"),d=s("CoID"),f=s("QMRz"),g=s("SSjb"),y=s("tGRr"),b=s("qwng"),C=s("UFNd"),w=s("PV5Z"),v=s("TToO"),F=function(n){function a(){return null!==n&&n.apply(this,arguments)||this}return v.__extends(a,n),a}(s("/bvZ").c),h=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function x(n){return t["\u0275vid"](0,[t["\u0275qud"](402653184,1,{fieldComponent:0}),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](2,0,null,null,9,"div",[["class","card"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275eld"](4,0,null,null,1,"h3",[["class","card-header"]],null,null,null,null,null)),(n()(),t["\u0275ted"](5,null,["",""])),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275eld"](7,0,null,null,3,"div",[["class","card-body"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](9,16777216,[[1,3],["fieldComponent",1]],null,0,null,null,null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n  "]))],null,function(n,a){n(a,5,0,a.component.to.label)})}var M=t["\u0275ccf"]("formly-wrapper-panel",F,function(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"formly-wrapper-panel",[],null,null,null,x,h)),t["\u0275did"](1,49152,null,0,F,[],null,null)],null,null)},{form:"form",field:"field",model:"model",options:"options"},{},[]),O=s("dI39"),N=s("S3hu"),T=s("UJsg"),D=s("OiLZ"),R=s("cIfd"),S=s("njCa"),G=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function P(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,12,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],function(n,a,s){var p=!0,o=n.component;return"submit"===a&&(p=!1!==t["\u0275nov"](n,2).onSubmit(s)&&p),"reset"===a&&(p=!1!==t["\u0275nov"](n,2).onReset()&&p),"ngSubmit"===a&&(p=!1!==o.submit()&&p),p},null,null)),t["\u0275did"](1,16384,null,0,p["\u0275bf"],[],null,null),t["\u0275did"](2,540672,null,0,p.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),t["\u0275prd"](2048,null,p.ControlContainer,null,[p.FormGroupDirective]),t["\u0275did"](4,16384,null,0,p.NgControlStatusGroup,[p.ControlContainer],null,null),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](6,0,null,null,5,"formly-form",[],null,null,null,N.b,N.a)),t["\u0275did"](7,966656,null,0,T.a,[D.a,R.a,S.b,[2,p.NgForm],[2,p.FormGroupDirective],[3,T.a]],{model:[0,"model"],form:[1,"form"],fields:[2,"fields"],options:[3,"options"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](9,0,null,0,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Submit"])),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n"]))],function(n,a){var s=a.component;n(a,2,0,s.form),n(a,7,0,s.model,s.form,s.fields,s.options)},function(n,a){n(a,0,0,t["\u0275nov"](a,4).ngClassUntouched,t["\u0275nov"](a,4).ngClassTouched,t["\u0275nov"](a,4).ngClassPristine,t["\u0275nov"](a,4).ngClassDirty,t["\u0275nov"](a,4).ngClassValid,t["\u0275nov"](a,4).ngClassInvalid,t["\u0275nov"](a,4).ngClassPending)})}var W=t["\u0275ccf"]("formly-app-example",o,function(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,P,G)),t["\u0275did"](1,49152,null,0,o,[],null,null)],null,null)},{},{},[]),j=s("Xjw4"),U=s("9Sd6"),V=s("XHgV"),E=s("1T37"),A=s("+j5Y"),I=s("U/+3"),Z=s("Mcof"),B=s("7u3n"),q=s("6sdf"),J=s("z7Rf"),L=s("ItHS"),z=s("OE0E"),X=s("iLnc"),Y=s("ApVT"),H=s("bkcK"),_=s("Uo70"),Q=s("6GVX"),K=s("gsbp"),$=s("EPl/"),nn=s("kJ/S"),an=s("j06o"),sn=s("ZuzD"),tn=s("sqmn"),pn=s("255V"),on=s("ixPN"),en=s("rK2e"),ln=function(){},cn=s("bfOx"),un=s("fCQL"),rn=s("ByAW"),mn=s("9N4v"),kn=s("ykPx"),dn=s("nwY2"),fn=s("TqLH"),gn=s("R2dV"),yn=s("JkuO"),bn=s("BILt"),Cn=s("H69Y"),wn=s("j/TD"),vn=s("daWb"),Fn=s("Dm6n"),hn=s("8F5j"),xn=s("WIBo"),Mn=s("MjWI");s.d(a,"ConfigModuleNgFactory",function(){return On});var On=t["\u0275cmf"](l,[],function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[c.a,u.a,i.a,r.a,m.a,k.a,d.a,f.a,g.a,y.a,b.a,C.a,w.a,M,O.a,W]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,j.NgLocalization,j.NgLocaleLocalization,[t.LOCALE_ID,[2,j["\u0275a"]]]),t["\u0275mpd"](6144,U.b,null,[j.DOCUMENT]),t["\u0275mpd"](4608,U.c,U.c,[[2,U.b]]),t["\u0275mpd"](4608,V.a,V.a,[]),t["\u0275mpd"](5120,E.d,E.b,[[3,E.d],t.NgZone,V.a]),t["\u0275mpd"](5120,E.g,E.f,[[3,E.g],V.a,t.NgZone]),t["\u0275mpd"](4608,A.i,A.i,[E.d,E.g,t.NgZone,j.DOCUMENT]),t["\u0275mpd"](5120,A.e,A.j,[[3,A.e],j.DOCUMENT]),t["\u0275mpd"](4608,A.h,A.h,[E.g,j.DOCUMENT]),t["\u0275mpd"](5120,A.f,A.m,[[3,A.f],j.DOCUMENT]),t["\u0275mpd"](4608,A.c,A.c,[A.i,A.e,t.ComponentFactoryResolver,A.h,A.f,t.ApplicationRef,t.Injector,t.NgZone,j.DOCUMENT]),t["\u0275mpd"](5120,A.k,A.l,[A.c]),t["\u0275mpd"](4608,I.k,I.k,[V.a]),t["\u0275mpd"](4608,I.j,I.j,[I.k,t.NgZone,j.DOCUMENT]),t["\u0275mpd"](136192,I.d,I.b,[[3,I.d],j.DOCUMENT]),t["\u0275mpd"](5120,I.n,I.m,[[3,I.n],[2,I.l],j.DOCUMENT]),t["\u0275mpd"](5120,I.i,I.g,[[3,I.i],t.NgZone,V.a]),t["\u0275mpd"](4608,Z.d,Z.d,[V.a]),t["\u0275mpd"](135680,Z.a,Z.a,[Z.d,t.NgZone]),t["\u0275mpd"](5120,B.b,B.c,[A.c]),t["\u0275mpd"](4608,q.b,q.b,[]),t["\u0275mpd"](5120,J.d,J.a,[[3,J.d],[2,L.c],z.c,[2,j.DOCUMENT]]),t["\u0275mpd"](4608,X.a,X.a,[]),t["\u0275mpd"](4608,Y.a,Y.a,[]),t["\u0275mpd"](4608,p.FormBuilder,p.FormBuilder,[]),t["\u0275mpd"](4608,p["\u0275i"],p["\u0275i"],[]),t["\u0275mpd"](4608,S.b,S.b,[S.a]),t["\u0275mpd"](4608,R.a,R.a,[]),t["\u0275mpd"](4608,D.a,D.a,[S.b,R.a]),t["\u0275mpd"](512,j.CommonModule,j.CommonModule,[]),t["\u0275mpd"](512,U.a,U.a,[]),t["\u0275mpd"](512,H.g,H.g,[]),t["\u0275mpd"](512,V.b,V.b,[]),t["\u0275mpd"](512,E.c,E.c,[]),t["\u0275mpd"](512,A.g,A.g,[]),t["\u0275mpd"](256,_.f,!0,[]),t["\u0275mpd"](512,_.n,_.n,[[2,_.f]]),t["\u0275mpd"](512,I.a,I.a,[]),t["\u0275mpd"](512,Z.c,Z.c,[]),t["\u0275mpd"](512,B.e,B.e,[]),t["\u0275mpd"](512,_.x,_.x,[]),t["\u0275mpd"](512,q.c,q.c,[]),t["\u0275mpd"](512,Q.i,Q.i,[]),t["\u0275mpd"](512,J.c,J.c,[]),t["\u0275mpd"](512,K.c,K.c,[]),t["\u0275mpd"](512,$.b,$.b,[]),t["\u0275mpd"](512,nn.h,nn.h,[]),t["\u0275mpd"](512,an.b,an.b,[]),t["\u0275mpd"](512,_.o,_.o,[]),t["\u0275mpd"](512,_.v,_.v,[]),t["\u0275mpd"](512,sn.b,sn.b,[]),t["\u0275mpd"](512,tn.c,tn.c,[]),t["\u0275mpd"](512,pn.a,pn.a,[]),t["\u0275mpd"](512,p["\u0275ba"],p["\u0275ba"],[]),t["\u0275mpd"](512,p.ReactiveFormsModule,p.ReactiveFormsModule,[]),t["\u0275mpd"](512,on.a,on.a,[]),t["\u0275mpd"](512,en.a,en.a,[]),t["\u0275mpd"](512,ln,ln,[]),t["\u0275mpd"](512,cn.r,cn.r,[[2,cn.w],[2,cn.o]]),t["\u0275mpd"](512,l,l,[]),t["\u0275mpd"](256,B.a,{showDelay:0,hideDelay:0,touchendHideDelay:1500},[]),t["\u0275mpd"](256,nn.a,!1,[]),t["\u0275mpd"](1024,S.a,function(){return[{types:[{name:"formly-group",component:un.a}]},{types:[{name:"input",component:rn.a,wrappers:["fieldset","label"]},{name:"checkbox",component:mn.a,wrappers:["fieldset"],defaultOptions:{templateOptions:{indeterminate:!0}}},{name:"radio",component:kn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}},{name:"select",component:dn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}},{name:"textarea",component:fn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{cols:1,rows:1}}},{name:"multicheckbox",component:gn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}}],wrappers:[{name:"label",component:yn.a},{name:"description",component:bn.a},{name:"validation-message",component:Cn.a},{name:"fieldset",component:wn.a},{name:"addons",component:vn.a}],manipulators:[{class:Fn.a,method:"run"},{class:hn.a,method:"run"},{class:xn.a,method:"run"}]},{types:[{name:"formly-group",component:un.a}]},{wrappers:[{name:"panel",component:F}]}]},[]),t["\u0275mpd"](1024,cn.m,function(){return[[{path:"",component:Mn.a,data:e}]]},[])])})},pDzE:function(n,a){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> NgModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> CommonModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/common\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> ReactiveFormsModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyBootstrapModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/bootstrap\'</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> PanelWrapperComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./panel-wrapper.component\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> AppComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./app.component\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >NgModule</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  imports<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    CommonModule<span class="token punctuation" >,</span>\n    ReactiveFormsModule<span class="token punctuation" >,</span>\n    FormlyBootstrapModule<span class="token punctuation" >,</span>\n    FormlyModule<span class="token punctuation" >.</span><span class="token function" >forRoot</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n      wrappers<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n        <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'panel\'</span><span class="token punctuation" >,</span> component<span class="token punctuation" >:</span> PanelWrapperComponent <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  declarations<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    AppComponent<span class="token punctuation" >,</span>\n    PanelWrapperComponent<span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppModule</span> <span class="token punctuation" >{</span> <span class="token punctuation" >}</span>\n'}});