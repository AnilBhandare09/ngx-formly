webpackJsonp([10],{"8NbC":function(n,s){n.exports='<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>form</span> <span class="token attr-name" >[formGroup]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span> <span class="token attr-name" >(ngSubmit)</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit()<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>formly-form</span> <span class="token attr-name" >[model]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>model<span class="token punctuation" >"</span></span> <span class="token attr-name" >[fields]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>fields<span class="token punctuation" >"</span></span> <span class="token attr-name" >[options]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>options<span class="token punctuation" >"</span></span> <span class="token attr-name" >[form]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>button</span> <span class="token attr-name" >type</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit<span class="token punctuation" >"</span></span> <span class="token attr-name" >class</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>btn btn-primary submit-button<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>Submit<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>button</span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>button</span> <span class="token attr-name" >type</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>button<span class="token punctuation" >"</span></span> <span class="token attr-name" >class</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>btn btn-default<span class="token punctuation" >"</span></span> <span class="token attr-name" >(click)</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>options.resetModel()<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>Reset<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>button</span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>formly-form</span><span class="token punctuation" >></span></span>\n<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>form</span><span class="token punctuation" >></span></span>\n'},"9WPF":function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {\n    formState: {\n      awesomeIsForced: false,\n    },\n  };\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'text',\n      type: 'input',\n      templateOptions: {\n        label: 'Text',\n        placeholder: 'Formly is terrific!',\n        required: true,\n      },\n    },\n    {\n      key: 'nested.story',\n      type: 'textarea',\n      templateOptions: {\n        label: 'Some sweet story',\n        placeholder: 'It allows you to build and maintain your forms with the ease of JavaScript :-)',\n        description: '',\n      },\n      expressionProperties: {\n        'templateOptions.focus': 'formState.awesomeIsForced',\n        'templateOptions.description': (model, formState) => {\n          if (formState.awesomeIsForced) {\n            return 'And look! This field magically got focus!';\n          }\n        },\n      },\n    },\n    {\n      key: 'awesome',\n      type: 'checkbox',\n      templateOptions: { label: '' },\n      expressionProperties: {\n        'templateOptions.disabled': 'formState.awesomeIsForced',\n        'templateOptions.label': (model, formState) => {\n          if (formState.awesomeIsForced) {\n            return 'Too bad, formly is really awesome...';\n          } else {\n            return 'Is formly totally awesome? (uncheck this and see what happens)';\n          }\n        },\n      },\n    },\n    {\n      key: 'whyNot',\n      type: 'textarea',\n      expressionProperties: {\n        'templateOptions.placeholder': (model, formState) => {\n          if (formState.awesomeIsForced) {\n            return 'Too bad... It really is awesome! Wasn\\'t that cool?';\n          } else {\n            return 'Type in here... I dare you';\n          }\n        },\n        'templateOptions.disabled': 'formState.awesomeIsForced',\n      },\n      hideExpression: 'model.awesome',\n      templateOptions: {\n        label: 'Why Not?',\n        placeholder: 'Type in here... I dare you',\n      },\n    },\n    {\n      key: 'custom',\n      type: 'custom',\n      templateOptions: {\n        label: 'Custom inlined',\n      },\n    },\n  ];\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n"},DnWF:function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { FormlyFieldCustomInput } from './custom-input.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n      ],\n      types: [\n        { name: 'custom', component: FormlyFieldCustomInput, wrappers: ['fieldset', 'label'] },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n    FormlyFieldCustomInput,\n  ],\n})\nexport class AppModule { }\n"},Eb7q:function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-custom-input',\n  template: `\n    <input [type]=\"type\" [formControl]=\"formControl\" [formlyAttributes]=\"field\">\n  `,\n})\nexport class FormlyFieldCustomInput extends FieldType {\n  get type() {\n    return this.to.type || 'text';\n  }\n}\n"},S7Dr:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormGroup <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFormOptions<span class="token punctuation" >,</span> FormlyFieldConfig <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-app-example\'</span><span class="token punctuation" >,</span>\n  templateUrl<span class="token punctuation" >:</span> <span class="token string" >\'./app.component.html\'</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppComponent</span> <span class="token punctuation" >{</span>\n  form <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >FormGroup</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  model<span class="token punctuation" >:</span> <span class="token keyword" >any</span> <span class="token operator" >=</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  options<span class="token punctuation" >:</span> FormlyFormOptions <span class="token operator" >=</span> <span class="token punctuation" >{</span>\n    formState<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n      awesomeIsForced<span class="token punctuation" >:</span> <span class="token keyword" >false</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  fields<span class="token punctuation" >:</span> FormlyFieldConfig<span class="token punctuation" >[</span><span class="token punctuation" >]</span> <span class="token operator" >=</span> <span class="token punctuation" >[</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'text\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Text\'</span><span class="token punctuation" >,</span>\n        placeholder<span class="token punctuation" >:</span> <span class="token string" >\'Formly is terrific!\'</span><span class="token punctuation" >,</span>\n        required<span class="token punctuation" >:</span> <span class="token keyword" >true</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'nested.story\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'textarea\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Some sweet story\'</span><span class="token punctuation" >,</span>\n        placeholder<span class="token punctuation" >:</span> <span class="token string" >\'It allows you to build and maintain your forms with the ease of JavaScript :-)\'</span><span class="token punctuation" >,</span>\n        description<span class="token punctuation" >:</span> <span class="token string" >\'\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      expressionProperties<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        <span class="token string" >\'templateOptions.focus\'</span><span class="token punctuation" >:</span> <span class="token string" >\'formState.awesomeIsForced\'</span><span class="token punctuation" >,</span>\n        <span class="token string" >\'templateOptions.description\'</span><span class="token punctuation" >:</span> <span class="token punctuation" >(</span>model<span class="token punctuation" >,</span> formState<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n          <span class="token keyword" >if</span> <span class="token punctuation" >(</span>formState<span class="token punctuation" >.</span>awesomeIsForced<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n            <span class="token keyword" >return</span> <span class="token string" >\'And look! This field magically got focus!\'</span><span class="token punctuation" >;</span>\n          <span class="token punctuation" >}</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'awesome\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'checkbox\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span> label<span class="token punctuation" >:</span> <span class="token string" >\'\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      expressionProperties<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        <span class="token string" >\'templateOptions.disabled\'</span><span class="token punctuation" >:</span> <span class="token string" >\'formState.awesomeIsForced\'</span><span class="token punctuation" >,</span>\n        <span class="token string" >\'templateOptions.label\'</span><span class="token punctuation" >:</span> <span class="token punctuation" >(</span>model<span class="token punctuation" >,</span> formState<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n          <span class="token keyword" >if</span> <span class="token punctuation" >(</span>formState<span class="token punctuation" >.</span>awesomeIsForced<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n            <span class="token keyword" >return</span> <span class="token string" >\'Too bad, formly is really awesome...\'</span><span class="token punctuation" >;</span>\n          <span class="token punctuation" >}</span> <span class="token keyword" >else</span> <span class="token punctuation" >{</span>\n            <span class="token keyword" >return</span> <span class="token string" >\'Is formly totally awesome? (uncheck this and see what happens)\'</span><span class="token punctuation" >;</span>\n          <span class="token punctuation" >}</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'whyNot\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'textarea\'</span><span class="token punctuation" >,</span>\n      expressionProperties<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        <span class="token string" >\'templateOptions.placeholder\'</span><span class="token punctuation" >:</span> <span class="token punctuation" >(</span>model<span class="token punctuation" >,</span> formState<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n          <span class="token keyword" >if</span> <span class="token punctuation" >(</span>formState<span class="token punctuation" >.</span>awesomeIsForced<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n            <span class="token keyword" >return</span> <span class="token string" >\'Too bad... It really is awesome! Wasn\\\'t that cool?\'</span><span class="token punctuation" >;</span>\n          <span class="token punctuation" >}</span> <span class="token keyword" >else</span> <span class="token punctuation" >{</span>\n            <span class="token keyword" >return</span> <span class="token string" >\'Type in here... I dare you\'</span><span class="token punctuation" >;</span>\n          <span class="token punctuation" >}</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        <span class="token string" >\'templateOptions.disabled\'</span><span class="token punctuation" >:</span> <span class="token string" >\'formState.awesomeIsForced\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      hideExpression<span class="token punctuation" >:</span> <span class="token string" >\'model.awesome\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Why Not?\'</span><span class="token punctuation" >,</span>\n        placeholder<span class="token punctuation" >:</span> <span class="token string" >\'Type in here... I dare you\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'custom\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'custom\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Custom inlined\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n  <span class="token function" >submit</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>form<span class="token punctuation" >.</span>valid<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token function" >alert</span><span class="token punctuation" >(</span>JSON<span class="token punctuation" >.</span><span class="token function" >stringify</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'},VBPS:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> NgModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> CommonModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/common\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> ReactiveFormsModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyBootstrapModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/bootstrap\'</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> AppComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./app.component\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFieldCustomInput <span class="token punctuation" >}</span> from <span class="token string" >\'./custom-input.component\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >NgModule</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  imports<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    CommonModule<span class="token punctuation" >,</span>\n    ReactiveFormsModule<span class="token punctuation" >,</span>\n    FormlyBootstrapModule<span class="token punctuation" >,</span>\n    FormlyModule<span class="token punctuation" >.</span><span class="token function" >forRoot</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n      validationMessages<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n        <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'required\'</span><span class="token punctuation" >,</span> message<span class="token punctuation" >:</span> <span class="token string" >\'This field is required\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n      types<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n        <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'custom\'</span><span class="token punctuation" >,</span> component<span class="token punctuation" >:</span> FormlyFieldCustomInput<span class="token punctuation" >,</span> wrappers<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token string" >\'fieldset\'</span><span class="token punctuation" >,</span> <span class="token string" >\'label\'</span><span class="token punctuation" >]</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  declarations<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    AppComponent<span class="token punctuation" >,</span>\n    FormlyFieldCustomInput<span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppModule</span> <span class="token punctuation" >{</span> <span class="token punctuation" >}</span>\n'},"WKF/":function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FieldType <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-field-custom-input\'</span><span class="token punctuation" >,</span>\n  template<span class="token punctuation" >:</span> `\n    <span class="token operator" >&lt;</span>input <span class="token punctuation" >[</span>type<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"type"</span> <span class="token punctuation" >[</span>formControl<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"formControl"</span> <span class="token punctuation" >[</span>formlyAttributes<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"field"</span><span class="token operator" >></span>\n  `<span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >FormlyFieldCustomInput</span> <span class="token keyword" >extends</span> <span class="token class-name" >FieldType</span> <span class="token punctuation" >{</span>\n  <span class="token keyword" >get</span> <span class="token function" >type</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>to<span class="token punctuation" >.</span>type <span class="token operator" >||</span> <span class="token string" >\'text\'</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'},ijxw:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var t=a("WT6e"),p=a("7DMc"),o=function(){function n(){this.form=new p.FormGroup({}),this.model={},this.options={formState:{awesomeIsForced:!1}},this.fields=[{key:"text",type:"input",templateOptions:{label:"Text",placeholder:"Formly is terrific!",required:!0}},{key:"nested.story",type:"textarea",templateOptions:{label:"Some sweet story",placeholder:"It allows you to build and maintain your forms with the ease of JavaScript :-)",description:""},expressionProperties:{"templateOptions.focus":"formState.awesomeIsForced","templateOptions.description":function(n,s){if(s.awesomeIsForced)return"And look! This field magically got focus!"}}},{key:"awesome",type:"checkbox",templateOptions:{label:""},expressionProperties:{"templateOptions.disabled":"formState.awesomeIsForced","templateOptions.label":function(n,s){return s.awesomeIsForced?"Too bad, formly is really awesome...":"Is formly totally awesome? (uncheck this and see what happens)"}}},{key:"whyNot",type:"textarea",expressionProperties:{"templateOptions.placeholder":function(n,s){return s.awesomeIsForced?"Too bad... It really is awesome! Wasn't that cool?":"Type in here... I dare you"},"templateOptions.disabled":"formState.awesomeIsForced"},hideExpression:"model.awesome",templateOptions:{label:"Why Not?",placeholder:"Type in here... I dare you"}},{key:"custom",type:"custom",templateOptions:{label:"Custom inlined"}}]}return n.prototype.submit=function(){this.form.valid&&alert(JSON.stringify(this.model))},n}(),e={examples:[{title:"Introduction Example",description:"This is a small subset of the things that formly can do :-) See the other examples and the documentation for more.",component:o,files:[{file:"app.component.html",content:a("8NbC"),filecontent:a("nxxr")},{file:"app.component.ts",content:a("S7Dr"),filecontent:a("9WPF")},{file:"app.module.ts",content:a("VBPS"),filecontent:a("DnWF")},{file:"custom-input.component.ts",content:a("WKF/"),filecontent:a("Eb7q")}]}]},l=function(){},c=a("INQx"),u=a("cPG/"),i=a("OGTa"),r=a("z4JO"),k=a("WhiG"),m=a("XPYZ"),d=a("CoID"),f=a("QMRz"),y=a("SSjb"),g=a("tGRr"),b=a("qwng"),w=a("UFNd"),h=a("PV5Z"),F=a("b235"),C=a("TToO"),v=function(n){function s(){return null!==n&&n.apply(this,arguments)||this}return C.__extends(s,n),Object.defineProperty(s.prototype,"type",{get:function(){return this.to.type||"text"},enumerable:!0,configurable:!0}),s}(a("/bvZ").b),x=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function O(n){return t["\u0275vid"](0,[(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](1,0,null,null,6,"input",[],[[8,"type",0],[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"input"],[null,"blur"],[null,"compositionstart"],[null,"compositionend"],[null,"focus"]],function(n,s,a){var p=!0;return"input"===s&&(p=!1!==t["\u0275nov"](n,2)._handleInput(a.target.value)&&p),"blur"===s&&(p=!1!==t["\u0275nov"](n,2).onTouched()&&p),"compositionstart"===s&&(p=!1!==t["\u0275nov"](n,2)._compositionStart()&&p),"compositionend"===s&&(p=!1!==t["\u0275nov"](n,2)._compositionEnd(a.target.value)&&p),"focus"===s&&(p=!1!==t["\u0275nov"](n,7).onFocus()&&p),"blur"===s&&(p=!1!==t["\u0275nov"](n,7).onBlur()&&p),p},null,null)),t["\u0275did"](2,16384,null,0,p.DefaultValueAccessor,[t.Renderer2,t.ElementRef,[2,p.COMPOSITION_BUFFER_MODE]],null,null),t["\u0275prd"](1024,null,p.NG_VALUE_ACCESSOR,function(n){return[n]},[p.DefaultValueAccessor]),t["\u0275did"](4,540672,null,0,p.FormControlDirective,[[8,null],[8,null],[2,p.NG_VALUE_ACCESSOR]],{form:[0,"form"]},null),t["\u0275prd"](2048,null,p.NgControl,null,[p.FormControlDirective]),t["\u0275did"](6,16384,null,0,p.NgControlStatus,[p.NgControl],null,null),t["\u0275did"](7,540672,null,0,F.a,[t.Renderer2,t.ElementRef],{field:[0,"field"]},null),(n()(),t["\u0275ted"](-1,null,["\n  "]))],function(n,s){var a=s.component;n(s,4,0,a.formControl),n(s,7,0,a.field)},function(n,s){n(s,1,0,s.component.type,t["\u0275nov"](s,6).ngClassUntouched,t["\u0275nov"](s,6).ngClassTouched,t["\u0275nov"](s,6).ngClassPristine,t["\u0275nov"](s,6).ngClassDirty,t["\u0275nov"](s,6).ngClassValid,t["\u0275nov"](s,6).ngClassInvalid,t["\u0275nov"](s,6).ngClassPending)})}var S=t["\u0275ccf"]("formly-field-custom-input",v,function(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"formly-field-custom-input",[],null,null,null,O,x)),t["\u0275did"](1,16760832,null,0,v,[],null,null)],function(n,s){n(s,1,0)},null)},{form:"form",field:"field",model:"model",options:"options"},{},[]),I=a("dI39"),M=a("S3hu"),N=a("UJsg"),T=a("OiLZ"),D=a("cIfd"),E=a("njCa"),R=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function P(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,15,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],function(n,s,a){var p=!0,o=n.component;return"submit"===s&&(p=!1!==t["\u0275nov"](n,2).onSubmit(a)&&p),"reset"===s&&(p=!1!==t["\u0275nov"](n,2).onReset()&&p),"ngSubmit"===s&&(p=!1!==o.submit()&&p),p},null,null)),t["\u0275did"](1,16384,null,0,p["\u0275bf"],[],null,null),t["\u0275did"](2,540672,null,0,p.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),t["\u0275prd"](2048,null,p.ControlContainer,null,[p.FormGroupDirective]),t["\u0275did"](4,16384,null,0,p.NgControlStatusGroup,[p.ControlContainer],null,null),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](6,0,null,null,8,"formly-form",[],null,null,null,M.b,M.a)),t["\u0275did"](7,966656,null,0,N.a,[T.a,D.a,E.b,[2,p.NgForm],[2,p.FormGroupDirective],[3,N.a]],{model:[0,"model"],form:[1,"form"],fields:[2,"fields"],options:[3,"options"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](9,0,null,0,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Submit"])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](12,0,null,0,1,"button",[["class","btn btn-default"],["type","button"]],null,[[null,"click"]],function(n,s,a){var t=!0;return"click"===s&&(t=!1!==n.component.options.resetModel()&&t),t},null,null)),(n()(),t["\u0275ted"](-1,null,["Reset"])),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n"]))],function(n,s){var a=s.component;n(s,2,0,a.form),n(s,7,0,a.model,a.form,a.fields,a.options)},function(n,s){n(s,0,0,t["\u0275nov"](s,4).ngClassUntouched,t["\u0275nov"](s,4).ngClassTouched,t["\u0275nov"](s,4).ngClassPristine,t["\u0275nov"](s,4).ngClassDirty,t["\u0275nov"](s,4).ngClassValid,t["\u0275nov"](s,4).ngClassInvalid,t["\u0275nov"](s,4).ngClassPending)})}var A=t["\u0275ccf"]("formly-app-example",o,function(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,P,R)),t["\u0275did"](1,49152,null,0,o,[],null,null)],null,null)},{},{},[]),U=a("Xjw4"),G=a("9Sd6"),W=a("XHgV"),j=a("1T37"),q=a("+j5Y"),V=a("U/+3"),_=a("Mcof"),B=a("7u3n"),L=a("6sdf"),Z=a("z7Rf"),J=a("ItHS"),z=a("OE0E"),H=a("iLnc"),K=a("ApVT"),X=a("bkcK"),Y=a("Uo70"),Q=a("6GVX"),$=a("gsbp"),nn=a("EPl/"),sn=a("kJ/S"),an=a("j06o"),tn=a("ZuzD"),pn=a("sqmn"),on=a("255V"),en=a("ixPN"),ln=a("rK2e"),cn=function(){},un=a("bfOx"),rn=a("fCQL"),kn=a("ByAW"),mn=a("9N4v"),dn=a("ykPx"),fn=a("nwY2"),yn=a("TqLH"),gn=a("R2dV"),bn=a("JkuO"),wn=a("BILt"),hn=a("H69Y"),Fn=a("j/TD"),Cn=a("daWb"),vn=a("Dm6n"),xn=a("8F5j"),On=a("WIBo"),Sn=a("MjWI");a.d(s,"ConfigModuleNgFactory",function(){return In});var In=t["\u0275cmf"](l,[],function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[c.a,u.a,i.a,r.a,k.a,m.a,d.a,f.a,y.a,g.a,b.a,w.a,h.a,S,I.a,A]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,U.NgLocalization,U.NgLocaleLocalization,[t.LOCALE_ID,[2,U["\u0275a"]]]),t["\u0275mpd"](6144,G.b,null,[U.DOCUMENT]),t["\u0275mpd"](4608,G.c,G.c,[[2,G.b]]),t["\u0275mpd"](4608,W.a,W.a,[]),t["\u0275mpd"](5120,j.d,j.b,[[3,j.d],t.NgZone,W.a]),t["\u0275mpd"](5120,j.g,j.f,[[3,j.g],W.a,t.NgZone]),t["\u0275mpd"](4608,q.i,q.i,[j.d,j.g,t.NgZone,U.DOCUMENT]),t["\u0275mpd"](5120,q.e,q.j,[[3,q.e],U.DOCUMENT]),t["\u0275mpd"](4608,q.h,q.h,[j.g,U.DOCUMENT]),t["\u0275mpd"](5120,q.f,q.m,[[3,q.f],U.DOCUMENT]),t["\u0275mpd"](4608,q.c,q.c,[q.i,q.e,t.ComponentFactoryResolver,q.h,q.f,t.ApplicationRef,t.Injector,t.NgZone,U.DOCUMENT]),t["\u0275mpd"](5120,q.k,q.l,[q.c]),t["\u0275mpd"](4608,V.k,V.k,[W.a]),t["\u0275mpd"](4608,V.j,V.j,[V.k,t.NgZone,U.DOCUMENT]),t["\u0275mpd"](136192,V.d,V.b,[[3,V.d],U.DOCUMENT]),t["\u0275mpd"](5120,V.n,V.m,[[3,V.n],[2,V.l],U.DOCUMENT]),t["\u0275mpd"](5120,V.i,V.g,[[3,V.i],t.NgZone,W.a]),t["\u0275mpd"](4608,_.d,_.d,[W.a]),t["\u0275mpd"](135680,_.a,_.a,[_.d,t.NgZone]),t["\u0275mpd"](5120,B.b,B.c,[q.c]),t["\u0275mpd"](4608,L.b,L.b,[]),t["\u0275mpd"](5120,Z.d,Z.a,[[3,Z.d],[2,J.c],z.c,[2,U.DOCUMENT]]),t["\u0275mpd"](4608,H.a,H.a,[]),t["\u0275mpd"](4608,K.a,K.a,[]),t["\u0275mpd"](4608,p.FormBuilder,p.FormBuilder,[]),t["\u0275mpd"](4608,p["\u0275i"],p["\u0275i"],[]),t["\u0275mpd"](4608,E.b,E.b,[E.a]),t["\u0275mpd"](4608,D.a,D.a,[]),t["\u0275mpd"](4608,T.a,T.a,[E.b,D.a]),t["\u0275mpd"](512,U.CommonModule,U.CommonModule,[]),t["\u0275mpd"](512,G.a,G.a,[]),t["\u0275mpd"](512,X.g,X.g,[]),t["\u0275mpd"](512,W.b,W.b,[]),t["\u0275mpd"](512,j.c,j.c,[]),t["\u0275mpd"](512,q.g,q.g,[]),t["\u0275mpd"](256,Y.f,!0,[]),t["\u0275mpd"](512,Y.n,Y.n,[[2,Y.f]]),t["\u0275mpd"](512,V.a,V.a,[]),t["\u0275mpd"](512,_.c,_.c,[]),t["\u0275mpd"](512,B.e,B.e,[]),t["\u0275mpd"](512,Y.x,Y.x,[]),t["\u0275mpd"](512,L.c,L.c,[]),t["\u0275mpd"](512,Q.i,Q.i,[]),t["\u0275mpd"](512,Z.c,Z.c,[]),t["\u0275mpd"](512,$.c,$.c,[]),t["\u0275mpd"](512,nn.b,nn.b,[]),t["\u0275mpd"](512,sn.h,sn.h,[]),t["\u0275mpd"](512,an.b,an.b,[]),t["\u0275mpd"](512,Y.o,Y.o,[]),t["\u0275mpd"](512,Y.v,Y.v,[]),t["\u0275mpd"](512,tn.b,tn.b,[]),t["\u0275mpd"](512,pn.c,pn.c,[]),t["\u0275mpd"](512,on.a,on.a,[]),t["\u0275mpd"](512,p["\u0275ba"],p["\u0275ba"],[]),t["\u0275mpd"](512,p.ReactiveFormsModule,p.ReactiveFormsModule,[]),t["\u0275mpd"](512,en.a,en.a,[]),t["\u0275mpd"](512,ln.a,ln.a,[]),t["\u0275mpd"](512,cn,cn,[]),t["\u0275mpd"](512,un.r,un.r,[[2,un.w],[2,un.o]]),t["\u0275mpd"](512,l,l,[]),t["\u0275mpd"](256,B.a,{showDelay:0,hideDelay:0,touchendHideDelay:1500},[]),t["\u0275mpd"](256,sn.a,!1,[]),t["\u0275mpd"](1024,E.a,function(){return[{types:[{name:"formly-group",component:rn.a}]},{types:[{name:"input",component:kn.a,wrappers:["fieldset","label"]},{name:"checkbox",component:mn.a,wrappers:["fieldset"],defaultOptions:{templateOptions:{indeterminate:!0}}},{name:"radio",component:dn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}},{name:"select",component:fn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}},{name:"textarea",component:yn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{cols:1,rows:1}}},{name:"multicheckbox",component:gn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}}],wrappers:[{name:"label",component:bn.a},{name:"description",component:wn.a},{name:"validation-message",component:hn.a},{name:"fieldset",component:Fn.a},{name:"addons",component:Cn.a}],manipulators:[{class:vn.a,method:"run"},{class:xn.a,method:"run"},{class:On.a,method:"run"}]},{types:[{name:"formly-group",component:rn.a}]},{validationMessages:[{name:"required",message:"This field is required"}],types:[{name:"custom",component:v,wrappers:["fieldset","label"]}]}]},[]),t["\u0275mpd"](1024,un.m,function(){return[[{path:"",component:Sn.a,data:e}]]},[])])})},nxxr:function(n,s){n.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form">\n    <button type="submit" class="btn btn-primary submit-button">Submit</button>\n    <button type="button" class="btn btn-default" (click)="options.resetModel()">Reset</button>\n  </formly-form>\n</form>\n'}});