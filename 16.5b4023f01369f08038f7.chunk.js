webpackJsonp([16],{"8q0/":function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nexport function minlengthValidationMessages(err, field) {\n  return `Should have atleast ${field.templateOptions.minLength} characters`;\n}\n\nimport { AppComponent } from './app.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n        { name: 'minlength', message: minlengthValidationMessages },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n})\nexport class AppModule { }\n"},H1lM:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> NgModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> CommonModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/common\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> ReactiveFormsModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyBootstrapModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/bootstrap\'</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >export</span> <span class="token keyword" >function</span> <span class="token function" >minlengthValidationMessages</span><span class="token punctuation" >(</span>err<span class="token punctuation" >,</span> field<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n  <span class="token keyword" >return</span> <span class="token template-string" ><span class="token string" >`Should have atleast </span><span class="token interpolation" ><span class="token interpolation-punctuation punctuation" >${</span>field<span class="token punctuation" >.</span>templateOptions<span class="token punctuation" >.</span>minLength<span class="token interpolation-punctuation punctuation" >}</span></span><span class="token string" > characters`</span></span><span class="token punctuation" >;</span>\n<span class="token punctuation" >}</span>\n\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> AppComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./app.component\'</span><span class="token punctuation" >;</span>\n@<span class="token function" >NgModule</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  imports<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    CommonModule<span class="token punctuation" >,</span>\n    ReactiveFormsModule<span class="token punctuation" >,</span>\n    FormlyBootstrapModule<span class="token punctuation" >,</span>\n    FormlyModule<span class="token punctuation" >.</span><span class="token function" >forRoot</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n      validationMessages<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n        <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'required\'</span><span class="token punctuation" >,</span> message<span class="token punctuation" >:</span> <span class="token string" >\'This field is required\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'minlength\'</span><span class="token punctuation" >,</span> message<span class="token punctuation" >:</span> minlengthValidationMessages <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  declarations<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    AppComponent<span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppModule</span> <span class="token punctuation" >{</span> <span class="token punctuation" >}</span>\n'},IFDS:function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  model: any = {};\n  options: FormlyFormOptions = {};\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'password',\n      type: 'input',\n      templateOptions: {\n        type: 'password',\n        label: 'Password',\n        placeholder: 'Must be at least 3 characters',\n        required: true,\n        minLength: 3,\n      },\n    },\n    {\n      key: 'passwordConfirm',\n      type: 'input',\n      templateOptions: {\n        type: 'password',\n        label: 'Confirm Password',\n        placeholder: 'Please re-enter your password',\n        required: true,\n      },\n      validators: {\n        fieldMatch: {\n          expression: (control) => control.value === this.model.password,\n          message: 'Password Not Matching',\n        },\n      },\n      expressionProperties: {\n        'templateOptions.disabled': () => !this.form.get('password').valid,\n      },\n    },\n  ];\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n"},KTum:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var t=a("WT6e"),p=a("7DMc"),o=function(){function n(){var n=this;this.form=new p.FormGroup({}),this.model={},this.options={},this.fields=[{key:"password",type:"input",templateOptions:{type:"password",label:"Password",placeholder:"Must be at least 3 characters",required:!0,minLength:3}},{key:"passwordConfirm",type:"input",templateOptions:{type:"password",label:"Confirm Password",placeholder:"Please re-enter your password",required:!0},validators:{fieldMatch:{expression:function(s){return s.value===n.model.password},message:"Password Not Matching"}},expressionProperties:{"templateOptions.disabled":function(){return!n.form.get("password").valid}}}]}return n.prototype.submit=function(){this.form.valid&&alert(JSON.stringify(this.model))},n}(),e={examples:[{title:"Matching Two Fields",description:"This is an example of how to add confirm password field using custom validation",component:o,files:[{file:"app.component.html",content:a("VySz"),filecontent:a("Q99c")},{file:"app.component.ts",content:a("eb6M"),filecontent:a("IFDS")},{file:"app.module.ts",content:a("H1lM"),filecontent:a("8q0/")}]}]},l=function(){},c=a("INQx"),u=a("cPG/"),i=a("OGTa"),r=a("z4JO"),m=a("WhiG"),k=a("XPYZ"),d=a("CoID"),f=a("QMRz"),g=a("SSjb"),y=a("tGRr"),b=a("qwng"),h=a("UFNd"),w=a("PV5Z"),v=a("dI39"),M=a("S3hu"),C=a("UJsg"),F=a("OiLZ"),O=a("cIfd"),x=a("njCa"),N=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function S(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,12,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],function(n,s,a){var p=!0,o=n.component;return"submit"===s&&(p=!1!==t["\u0275nov"](n,2).onSubmit(a)&&p),"reset"===s&&(p=!1!==t["\u0275nov"](n,2).onReset()&&p),"ngSubmit"===s&&(p=!1!==o.submit()&&p),p},null,null)),t["\u0275did"](1,16384,null,0,p["\u0275bf"],[],null,null),t["\u0275did"](2,540672,null,0,p.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),t["\u0275prd"](2048,null,p.ControlContainer,null,[p.FormGroupDirective]),t["\u0275did"](4,16384,null,0,p.NgControlStatusGroup,[p.ControlContainer],null,null),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](6,0,null,null,5,"formly-form",[],null,null,null,M.b,M.a)),t["\u0275did"](7,966656,null,0,C.a,[F.a,O.a,x.b,[2,p.NgForm],[2,p.FormGroupDirective],[3,C.a]],{model:[0,"model"],form:[1,"form"],fields:[2,"fields"],options:[3,"options"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](9,0,null,0,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Submit"])),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n"]))],function(n,s){var a=s.component;n(s,2,0,a.form),n(s,7,0,a.model,a.form,a.fields,a.options)},function(n,s){n(s,0,0,t["\u0275nov"](s,4).ngClassUntouched,t["\u0275nov"](s,4).ngClassTouched,t["\u0275nov"](s,4).ngClassPristine,t["\u0275nov"](s,4).ngClassDirty,t["\u0275nov"](s,4).ngClassValid,t["\u0275nov"](s,4).ngClassInvalid,t["\u0275nov"](s,4).ngClassPending)})}var D=t["\u0275ccf"]("formly-app-example",o,function(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,S,N)),t["\u0275did"](1,49152,null,0,o,[],null,null)],null,null)},{},{},[]),P=a("Xjw4"),T=a("9Sd6"),R=a("XHgV"),q=a("1T37"),U=a("+j5Y"),G=a("U/+3"),L=a("Mcof"),E=a("7u3n"),j=a("6sdf"),I=a("z7Rf"),V=a("ItHS"),A=a("OE0E"),Z=a("iLnc"),B=a("ApVT"),z=a("bkcK"),J=a("Uo70"),H=a("6GVX"),W=a("gsbp"),Q=a("EPl/"),X=a("kJ/S"),Y=a("j06o"),K=a("ZuzD"),_=a("sqmn"),$=a("255V"),nn=a("ixPN"),sn=a("rK2e");function an(n,s){return"Should have atleast "+s.templateOptions.minLength+" characters"}var tn=function(){},pn=a("bfOx"),on=a("fCQL"),en=a("ByAW"),ln=a("9N4v"),cn=a("ykPx"),un=a("nwY2"),rn=a("TqLH"),mn=a("R2dV"),kn=a("JkuO"),dn=a("BILt"),fn=a("H69Y"),gn=a("j/TD"),yn=a("daWb"),bn=a("Dm6n"),hn=a("8F5j"),wn=a("WIBo"),vn=a("MjWI");a.d(s,"ConfigModuleNgFactory",function(){return Mn});var Mn=t["\u0275cmf"](l,[],function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[c.a,u.a,i.a,r.a,m.a,k.a,d.a,f.a,g.a,y.a,b.a,h.a,w.a,v.a,D]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,P.NgLocalization,P.NgLocaleLocalization,[t.LOCALE_ID,[2,P["\u0275a"]]]),t["\u0275mpd"](6144,T.b,null,[P.DOCUMENT]),t["\u0275mpd"](4608,T.c,T.c,[[2,T.b]]),t["\u0275mpd"](4608,R.a,R.a,[]),t["\u0275mpd"](5120,q.d,q.b,[[3,q.d],t.NgZone,R.a]),t["\u0275mpd"](5120,q.g,q.f,[[3,q.g],R.a,t.NgZone]),t["\u0275mpd"](4608,U.i,U.i,[q.d,q.g,t.NgZone,P.DOCUMENT]),t["\u0275mpd"](5120,U.e,U.j,[[3,U.e],P.DOCUMENT]),t["\u0275mpd"](4608,U.h,U.h,[q.g,P.DOCUMENT]),t["\u0275mpd"](5120,U.f,U.m,[[3,U.f],P.DOCUMENT]),t["\u0275mpd"](4608,U.c,U.c,[U.i,U.e,t.ComponentFactoryResolver,U.h,U.f,t.ApplicationRef,t.Injector,t.NgZone,P.DOCUMENT]),t["\u0275mpd"](5120,U.k,U.l,[U.c]),t["\u0275mpd"](4608,G.k,G.k,[R.a]),t["\u0275mpd"](4608,G.j,G.j,[G.k,t.NgZone,P.DOCUMENT]),t["\u0275mpd"](136192,G.d,G.b,[[3,G.d],P.DOCUMENT]),t["\u0275mpd"](5120,G.n,G.m,[[3,G.n],[2,G.l],P.DOCUMENT]),t["\u0275mpd"](5120,G.i,G.g,[[3,G.i],t.NgZone,R.a]),t["\u0275mpd"](4608,L.d,L.d,[R.a]),t["\u0275mpd"](135680,L.a,L.a,[L.d,t.NgZone]),t["\u0275mpd"](5120,E.b,E.c,[U.c]),t["\u0275mpd"](4608,j.b,j.b,[]),t["\u0275mpd"](5120,I.d,I.a,[[3,I.d],[2,V.c],A.c,[2,P.DOCUMENT]]),t["\u0275mpd"](4608,Z.a,Z.a,[]),t["\u0275mpd"](4608,B.a,B.a,[]),t["\u0275mpd"](4608,p.FormBuilder,p.FormBuilder,[]),t["\u0275mpd"](4608,p["\u0275i"],p["\u0275i"],[]),t["\u0275mpd"](4608,x.b,x.b,[x.a]),t["\u0275mpd"](4608,O.a,O.a,[]),t["\u0275mpd"](4608,F.a,F.a,[x.b,O.a]),t["\u0275mpd"](512,P.CommonModule,P.CommonModule,[]),t["\u0275mpd"](512,T.a,T.a,[]),t["\u0275mpd"](512,z.g,z.g,[]),t["\u0275mpd"](512,R.b,R.b,[]),t["\u0275mpd"](512,q.c,q.c,[]),t["\u0275mpd"](512,U.g,U.g,[]),t["\u0275mpd"](256,J.f,!0,[]),t["\u0275mpd"](512,J.n,J.n,[[2,J.f]]),t["\u0275mpd"](512,G.a,G.a,[]),t["\u0275mpd"](512,L.c,L.c,[]),t["\u0275mpd"](512,E.e,E.e,[]),t["\u0275mpd"](512,J.x,J.x,[]),t["\u0275mpd"](512,j.c,j.c,[]),t["\u0275mpd"](512,H.i,H.i,[]),t["\u0275mpd"](512,I.c,I.c,[]),t["\u0275mpd"](512,W.c,W.c,[]),t["\u0275mpd"](512,Q.b,Q.b,[]),t["\u0275mpd"](512,X.h,X.h,[]),t["\u0275mpd"](512,Y.b,Y.b,[]),t["\u0275mpd"](512,J.o,J.o,[]),t["\u0275mpd"](512,J.v,J.v,[]),t["\u0275mpd"](512,K.b,K.b,[]),t["\u0275mpd"](512,_.c,_.c,[]),t["\u0275mpd"](512,$.a,$.a,[]),t["\u0275mpd"](512,p["\u0275ba"],p["\u0275ba"],[]),t["\u0275mpd"](512,p.ReactiveFormsModule,p.ReactiveFormsModule,[]),t["\u0275mpd"](512,nn.a,nn.a,[]),t["\u0275mpd"](512,sn.a,sn.a,[]),t["\u0275mpd"](512,tn,tn,[]),t["\u0275mpd"](512,pn.r,pn.r,[[2,pn.w],[2,pn.o]]),t["\u0275mpd"](512,l,l,[]),t["\u0275mpd"](256,E.a,{showDelay:0,hideDelay:0,touchendHideDelay:1500},[]),t["\u0275mpd"](256,X.a,!1,[]),t["\u0275mpd"](1024,x.a,function(){return[{types:[{name:"formly-group",component:on.a}]},{types:[{name:"input",component:en.a,wrappers:["fieldset","label"]},{name:"checkbox",component:ln.a,wrappers:["fieldset"],defaultOptions:{templateOptions:{indeterminate:!0}}},{name:"radio",component:cn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}},{name:"select",component:un.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}},{name:"textarea",component:rn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{cols:1,rows:1}}},{name:"multicheckbox",component:mn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}}],wrappers:[{name:"label",component:kn.a},{name:"description",component:dn.a},{name:"validation-message",component:fn.a},{name:"fieldset",component:gn.a},{name:"addons",component:yn.a}],manipulators:[{class:bn.a,method:"run"},{class:hn.a,method:"run"},{class:wn.a,method:"run"}]},{types:[{name:"formly-group",component:on.a}]},{validationMessages:[{name:"required",message:"This field is required"},{name:"minlength",message:an}]}]},[]),t["\u0275mpd"](1024,pn.m,function(){return[[{path:"",component:vn.a,data:e}]]},[])])})},Q99c:function(n,s){n.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form">\n    <button type="submit" class="btn btn-primary submit-button">Submit</button>\n  </formly-form>\n</form>\n'},VySz:function(n,s){n.exports='<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>form</span> <span class="token attr-name" >[formGroup]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span> <span class="token attr-name" >(ngSubmit)</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit()<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>formly-form</span> <span class="token attr-name" >[model]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>model<span class="token punctuation" >"</span></span> <span class="token attr-name" >[fields]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>fields<span class="token punctuation" >"</span></span> <span class="token attr-name" >[options]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>options<span class="token punctuation" >"</span></span> <span class="token attr-name" >[form]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>button</span> <span class="token attr-name" >type</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit<span class="token punctuation" >"</span></span> <span class="token attr-name" >class</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>btn btn-primary submit-button<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>Submit<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>button</span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>formly-form</span><span class="token punctuation" >></span></span>\n<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>form</span><span class="token punctuation" >></span></span>\n'},eb6M:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormGroup <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFormOptions<span class="token punctuation" >,</span> FormlyFieldConfig <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-app-example\'</span><span class="token punctuation" >,</span>\n  templateUrl<span class="token punctuation" >:</span> <span class="token string" >\'./app.component.html\'</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppComponent</span> <span class="token punctuation" >{</span>\n  form <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >FormGroup</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  model<span class="token punctuation" >:</span> <span class="token keyword" >any</span> <span class="token operator" >=</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  options<span class="token punctuation" >:</span> FormlyFormOptions <span class="token operator" >=</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n\n  fields<span class="token punctuation" >:</span> FormlyFieldConfig<span class="token punctuation" >[</span><span class="token punctuation" >]</span> <span class="token operator" >=</span> <span class="token punctuation" >[</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'password\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        type<span class="token punctuation" >:</span> <span class="token string" >\'password\'</span><span class="token punctuation" >,</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Password\'</span><span class="token punctuation" >,</span>\n        placeholder<span class="token punctuation" >:</span> <span class="token string" >\'Must be at least 3 characters\'</span><span class="token punctuation" >,</span>\n        required<span class="token punctuation" >:</span> <span class="token keyword" >true</span><span class="token punctuation" >,</span>\n        minLength<span class="token punctuation" >:</span> <span class="token number" >3</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'passwordConfirm\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        type<span class="token punctuation" >:</span> <span class="token string" >\'password\'</span><span class="token punctuation" >,</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Confirm Password\'</span><span class="token punctuation" >,</span>\n        placeholder<span class="token punctuation" >:</span> <span class="token string" >\'Please re-enter your password\'</span><span class="token punctuation" >,</span>\n        required<span class="token punctuation" >:</span> <span class="token keyword" >true</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      validators<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        fieldMatch<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n          expression<span class="token punctuation" >:</span> <span class="token punctuation" >(</span>control<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> control<span class="token punctuation" >.</span>value <span class="token operator" >===</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >.</span>password<span class="token punctuation" >,</span>\n          message<span class="token punctuation" >:</span> <span class="token string" >\'Password Not Matching\'</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      expressionProperties<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        <span class="token string" >\'templateOptions.disabled\'</span><span class="token punctuation" >:</span> <span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token operator" >!</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>form<span class="token punctuation" >.</span><span class="token keyword" >get</span><span class="token punctuation" >(</span><span class="token string" >\'password\'</span><span class="token punctuation" >)</span><span class="token punctuation" >.</span>valid<span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n  <span class="token function" >submit</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>form<span class="token punctuation" >.</span>valid<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token function" >alert</span><span class="token punctuation" >(</span>JSON<span class="token punctuation" >.</span><span class="token function" >stringify</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'}});