webpackJsonp([8],{"+2c9":function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormGroup <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFormOptions<span class="token punctuation" >,</span> FormlyFieldConfig <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-app-example\'</span><span class="token punctuation" >,</span>\n  templateUrl<span class="token punctuation" >:</span> <span class="token string" >\'./app.component.html\'</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppComponent</span> <span class="token punctuation" >{</span>\n  form <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >FormGroup</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  options<span class="token punctuation" >:</span> FormlyFormOptions <span class="token operator" >=</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  model <span class="token operator" >=</span> <span class="token punctuation" >{</span> someInput<span class="token punctuation" >:</span> <span class="token string" >\'\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n\n  fields<span class="token punctuation" >:</span> FormlyFieldConfig<span class="token punctuation" >[</span><span class="token punctuation" >]</span> <span class="token operator" >=</span> <span class="token punctuation" >[</span>\n    <span class="token punctuation" >{</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'button\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        text<span class="token punctuation" >:</span> <span class="token string" >\'With Function\'</span><span class="token punctuation" >,</span>\n        onClick<span class="token punctuation" >:</span> <span class="token punctuation" >(</span>$event<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token function" >alert</span><span class="token punctuation" >(</span><span class="token string" >\'You clicked me!\'</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'button\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Click this guy\'</span><span class="token punctuation" >,</span>\n        text<span class="token punctuation" >:</span> <span class="token string" >\'JSON Only\'</span><span class="token punctuation" >,</span>\n        btnType<span class="token punctuation" >:</span> <span class="token string" >\'info\'</span><span class="token punctuation" >,</span>\n        onClick<span class="token punctuation" >:</span> <span class="token punctuation" >(</span>$event<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n          <span class="token keyword" >this</span><span class="token punctuation" >.</span>form<span class="token punctuation" >.</span><span class="token keyword" >get</span><span class="token punctuation" >(</span><span class="token string" >\'someInput\'</span><span class="token punctuation" >)</span><span class="token punctuation" >.</span><span class="token function" >setValue</span><span class="token punctuation" >(</span><span class="token string" >\'clicked!\'</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        description<span class="token punctuation" >:</span> <span class="token string" >\'These can have labels and stuff too if you want....\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'someInput\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n      templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        label<span class="token punctuation" >:</span> <span class="token string" >\'Some Input\'</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n  <span class="token function" >submit</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>form<span class="token punctuation" >.</span>valid<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token function" >alert</span><span class="token punctuation" >(</span>JSON<span class="token punctuation" >.</span><span class="token function" >stringify</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'},"2DWs":function(n,s){n.exports='<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>form</span> <span class="token attr-name" >[formGroup]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span> <span class="token attr-name" >(ngSubmit)</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit()<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>formly-form</span> <span class="token attr-name" >[model]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>model<span class="token punctuation" >"</span></span> <span class="token attr-name" >[fields]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>fields<span class="token punctuation" >"</span></span> <span class="token attr-name" >[options]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>options<span class="token punctuation" >"</span></span> <span class="token attr-name" >[form]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>button</span> <span class="token attr-name" >type</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit<span class="token punctuation" >"</span></span> <span class="token attr-name" >class</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>btn btn-primary submit-button<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>Submit<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>button</span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>formly-form</span><span class="token punctuation" >></span></span>\n<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>form</span><span class="token punctuation" >></span></span>\n'},B7VY:function(n,s){n.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form">\n    <button type="submit" class="btn btn-primary submit-button">Submit</button>\n  </formly-form>\n</form>\n'},"O/YQ":function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-button',\n  template: `\n    <div>\n      <button [type]=\"to.type\" [ngClass]=\"'btn btn-' + to.btnType\" (click)=\"onClick($event)\">\n        {{ to.text }}\n      </button>\n    </div>\n  `,\n})\nexport class FormlyFieldButton extends FieldType {\n  onClick($event) {\n    if (this.to.onClick) {\n      this.to.onClick($event);\n    }\n  }\n}\n"},kYl6:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FieldType <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-field-button\'</span><span class="token punctuation" >,</span>\n  template<span class="token punctuation" >:</span> `\n    <span class="token operator" >&lt;</span>div<span class="token operator" >></span>\n      <span class="token operator" >&lt;</span>button <span class="token punctuation" >[</span>type<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"to.type"</span> <span class="token punctuation" >[</span>ngClass<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"\'btn btn-\' + to.btnType"</span> <span class="token punctuation" >(</span>click<span class="token punctuation" >)</span><span class="token operator" >=</span><span class="token string" >"onClick($event)"</span><span class="token operator" >></span>\n        <span class="token punctuation" >{</span><span class="token punctuation" >{</span> to<span class="token punctuation" >.</span>text <span class="token punctuation" >}</span><span class="token punctuation" >}</span>\n      <span class="token operator" >&lt;</span><span class="token operator" >/</span>button<span class="token operator" >></span>\n    <span class="token operator" >&lt;</span><span class="token operator" >/</span>div<span class="token operator" >></span>\n  `<span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >FormlyFieldButton</span> <span class="token keyword" >extends</span> <span class="token class-name" >FieldType</span> <span class="token punctuation" >{</span>\n  <span class="token function" >onClick</span><span class="token punctuation" >(</span>$event<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>to<span class="token punctuation" >.</span>onClick<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >this</span><span class="token punctuation" >.</span>to<span class="token punctuation" >.</span><span class="token function" >onClick</span><span class="token punctuation" >(</span>$event<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'},kfNZ:function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  options: FormlyFormOptions = {};\n  model = { someInput: '' };\n\n  fields: FormlyFieldConfig[] = [\n    {\n      type: 'button',\n      templateOptions: {\n        text: 'With Function',\n        onClick: ($event) => alert('You clicked me!'),\n      },\n    },\n    {\n      type: 'button',\n      templateOptions: {\n        label: 'Click this guy',\n        text: 'JSON Only',\n        btnType: 'info',\n        onClick: ($event) => {\n          this.form.get('someInput').setValue('clicked!');\n        },\n        description: 'These can have labels and stuff too if you want....',\n      },\n    },\n    {\n      key: 'someInput',\n      type: 'input',\n      templateOptions: {\n        label: 'Some Input',\n      },\n    },\n  ];\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n"},qTb3:function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { FormlyFieldButton } from './button-type.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot({\n      types: [\n        {\n          name: 'button',\n          component: FormlyFieldButton,\n          wrappers: ['fieldset', 'label'],\n          defaultOptions: {\n            templateOptions: {\n              btnType: 'default',\n              type: 'button',\n            },\n          },\n        },\n      ],\n    }),\n  ],\n  declarations: [\n    AppComponent,\n    FormlyFieldButton,\n  ],\n})\nexport class AppModule { }\n"},w9sy:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var t=a("WT6e"),p=a("7DMc"),o=function(){function n(){var n=this;this.form=new p.FormGroup({}),this.options={},this.model={someInput:""},this.fields=[{type:"button",templateOptions:{text:"With Function",onClick:function(n){return alert("You clicked me!")}}},{type:"button",templateOptions:{label:"Click this guy",text:"JSON Only",btnType:"info",onClick:function(s){n.form.get("someInput").setValue("clicked!")},description:"These can have labels and stuff too if you want...."}},{key:"someInput",type:"input",templateOptions:{label:"Some Input"}}]}return n.prototype.submit=function(){this.form.valid&&alert(JSON.stringify(this.model))},n}(),e={examples:[{title:"Buttons",description:"\n              This demonstrates a type for buttons. Specifically using bootstrap but this could easily be adapted for other frameworks\n            ",component:o,files:[{file:"app.component.html",content:a("2DWs"),filecontent:a("B7VY")},{file:"app.component.ts",content:a("+2c9"),filecontent:a("kfNZ")},{file:"button-type.component.ts",content:a("kYl6"),filecontent:a("O/YQ")},{file:"app.module.ts",content:a("xyKX"),filecontent:a("qTb3")}]}]},l=function(){},c=a("INQx"),u=a("cPG/"),i=a("OGTa"),r=a("z4JO"),k=a("WhiG"),m=a("XPYZ"),d=a("CoID"),f=a("QMRz"),y=a("SSjb"),g=a("tGRr"),b=a("qwng"),C=a("UFNd"),v=a("PV5Z"),F=a("Xjw4"),h=a("TToO"),O=function(n){function s(){return null!==n&&n.apply(this,arguments)||this}return h.__extends(s,n),s.prototype.onClick=function(n){this.to.onClick&&this.to.onClick(n)},s}(a("/bvZ").b),w=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function x(n){return t["\u0275vid"](0,[(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](1,0,null,null,5,"div",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275eld"](3,0,null,null,2,"button",[],[[8,"type",0]],[[null,"click"]],function(n,s,a){var t=!0;return"click"===s&&(t=!1!==n.component.onClick(a)&&t),t},null,null)),t["\u0275did"](4,278528,null,0,F.NgClass,[t.IterableDiffers,t.KeyValueDiffers,t.ElementRef,t.Renderer2],{ngClass:[0,"ngClass"]},null),(n()(),t["\u0275ted"](5,null,["\n        ","\n      "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n  "]))],function(n,s){n(s,4,0,"btn btn-"+s.component.to.btnType)},function(n,s){var a=s.component;n(s,3,0,a.to.type),n(s,5,0,a.to.text)})}var M=t["\u0275ccf"]("formly-field-button",O,function(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"formly-field-button",[],null,null,null,x,w)),t["\u0275did"](1,16760832,null,0,O,[],null,null)],function(n,s){n(s,1,0)},null)},{form:"form",field:"field",model:"model",options:"options"},{},[]),N=a("dI39"),T=a("S3hu"),D=a("UJsg"),S=a("OiLZ"),I=a("cIfd"),R=a("njCa"),B=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function U(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,12,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],function(n,s,a){var p=!0,o=n.component;return"submit"===s&&(p=!1!==t["\u0275nov"](n,2).onSubmit(a)&&p),"reset"===s&&(p=!1!==t["\u0275nov"](n,2).onReset()&&p),"ngSubmit"===s&&(p=!1!==o.submit()&&p),p},null,null)),t["\u0275did"](1,16384,null,0,p["\u0275bf"],[],null,null),t["\u0275did"](2,540672,null,0,p.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),t["\u0275prd"](2048,null,p.ControlContainer,null,[p.FormGroupDirective]),t["\u0275did"](4,16384,null,0,p.NgControlStatusGroup,[p.ControlContainer],null,null),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](6,0,null,null,5,"formly-form",[],null,null,null,T.b,T.a)),t["\u0275did"](7,966656,null,0,D.a,[S.a,I.a,R.b,[2,p.NgForm],[2,p.FormGroupDirective],[3,D.a]],{model:[0,"model"],form:[1,"form"],fields:[2,"fields"],options:[3,"options"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](9,0,null,0,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Submit"])),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n"]))],function(n,s){var a=s.component;n(s,2,0,a.form),n(s,7,0,a.model,a.form,a.fields,a.options)},function(n,s){n(s,0,0,t["\u0275nov"](s,4).ngClassUntouched,t["\u0275nov"](s,4).ngClassTouched,t["\u0275nov"](s,4).ngClassPristine,t["\u0275nov"](s,4).ngClassDirty,t["\u0275nov"](s,4).ngClassValid,t["\u0275nov"](s,4).ngClassInvalid,t["\u0275nov"](s,4).ngClassPending)})}var G=t["\u0275ccf"]("formly-app-example",o,function(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,U,B)),t["\u0275did"](1,49152,null,0,o,[],null,null)],null,null)},{},{},[]),E=a("9Sd6"),Z=a("XHgV"),j=a("1T37"),V=a("+j5Y"),Y=a("U/+3"),A=a("Mcof"),J=a("7u3n"),W=a("6sdf"),L=a("z7Rf"),$=a("ItHS"),P=a("OE0E"),z=a("iLnc"),X=a("ApVT"),q=a("bkcK"),H=a("Uo70"),K=a("6GVX"),Q=a("gsbp"),_=a("EPl/"),nn=a("kJ/S"),sn=a("j06o"),an=a("ZuzD"),tn=a("sqmn"),pn=a("255V"),on=a("ixPN"),en=a("rK2e"),ln=function(){},cn=a("bfOx"),un=a("fCQL"),rn=a("ByAW"),kn=a("9N4v"),mn=a("ykPx"),dn=a("nwY2"),fn=a("TqLH"),yn=a("R2dV"),gn=a("JkuO"),bn=a("BILt"),Cn=a("H69Y"),vn=a("j/TD"),Fn=a("daWb"),hn=a("Dm6n"),On=a("8F5j"),wn=a("WIBo"),xn=a("MjWI");a.d(s,"ConfigModuleNgFactory",function(){return Mn});var Mn=t["\u0275cmf"](l,[],function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[c.a,u.a,i.a,r.a,k.a,m.a,d.a,f.a,y.a,g.a,b.a,C.a,v.a,M,N.a,G]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,F.NgLocalization,F.NgLocaleLocalization,[t.LOCALE_ID,[2,F["\u0275a"]]]),t["\u0275mpd"](6144,E.b,null,[F.DOCUMENT]),t["\u0275mpd"](4608,E.c,E.c,[[2,E.b]]),t["\u0275mpd"](4608,Z.a,Z.a,[]),t["\u0275mpd"](5120,j.d,j.b,[[3,j.d],t.NgZone,Z.a]),t["\u0275mpd"](5120,j.g,j.f,[[3,j.g],Z.a,t.NgZone]),t["\u0275mpd"](4608,V.i,V.i,[j.d,j.g,t.NgZone,F.DOCUMENT]),t["\u0275mpd"](5120,V.e,V.j,[[3,V.e],F.DOCUMENT]),t["\u0275mpd"](4608,V.h,V.h,[j.g,F.DOCUMENT]),t["\u0275mpd"](5120,V.f,V.m,[[3,V.f],F.DOCUMENT]),t["\u0275mpd"](4608,V.c,V.c,[V.i,V.e,t.ComponentFactoryResolver,V.h,V.f,t.ApplicationRef,t.Injector,t.NgZone,F.DOCUMENT]),t["\u0275mpd"](5120,V.k,V.l,[V.c]),t["\u0275mpd"](4608,Y.k,Y.k,[Z.a]),t["\u0275mpd"](4608,Y.j,Y.j,[Y.k,t.NgZone,F.DOCUMENT]),t["\u0275mpd"](136192,Y.d,Y.b,[[3,Y.d],F.DOCUMENT]),t["\u0275mpd"](5120,Y.n,Y.m,[[3,Y.n],[2,Y.l],F.DOCUMENT]),t["\u0275mpd"](5120,Y.i,Y.g,[[3,Y.i],t.NgZone,Z.a]),t["\u0275mpd"](4608,A.d,A.d,[Z.a]),t["\u0275mpd"](135680,A.a,A.a,[A.d,t.NgZone]),t["\u0275mpd"](5120,J.b,J.c,[V.c]),t["\u0275mpd"](4608,W.b,W.b,[]),t["\u0275mpd"](5120,L.d,L.a,[[3,L.d],[2,$.c],P.c,[2,F.DOCUMENT]]),t["\u0275mpd"](4608,z.a,z.a,[]),t["\u0275mpd"](4608,X.a,X.a,[]),t["\u0275mpd"](4608,p.FormBuilder,p.FormBuilder,[]),t["\u0275mpd"](4608,p["\u0275i"],p["\u0275i"],[]),t["\u0275mpd"](4608,R.b,R.b,[R.a]),t["\u0275mpd"](4608,I.a,I.a,[]),t["\u0275mpd"](4608,S.a,S.a,[R.b,I.a]),t["\u0275mpd"](512,F.CommonModule,F.CommonModule,[]),t["\u0275mpd"](512,E.a,E.a,[]),t["\u0275mpd"](512,q.g,q.g,[]),t["\u0275mpd"](512,Z.b,Z.b,[]),t["\u0275mpd"](512,j.c,j.c,[]),t["\u0275mpd"](512,V.g,V.g,[]),t["\u0275mpd"](256,H.f,!0,[]),t["\u0275mpd"](512,H.n,H.n,[[2,H.f]]),t["\u0275mpd"](512,Y.a,Y.a,[]),t["\u0275mpd"](512,A.c,A.c,[]),t["\u0275mpd"](512,J.e,J.e,[]),t["\u0275mpd"](512,H.x,H.x,[]),t["\u0275mpd"](512,W.c,W.c,[]),t["\u0275mpd"](512,K.i,K.i,[]),t["\u0275mpd"](512,L.c,L.c,[]),t["\u0275mpd"](512,Q.c,Q.c,[]),t["\u0275mpd"](512,_.b,_.b,[]),t["\u0275mpd"](512,nn.h,nn.h,[]),t["\u0275mpd"](512,sn.b,sn.b,[]),t["\u0275mpd"](512,H.o,H.o,[]),t["\u0275mpd"](512,H.v,H.v,[]),t["\u0275mpd"](512,an.b,an.b,[]),t["\u0275mpd"](512,tn.c,tn.c,[]),t["\u0275mpd"](512,pn.a,pn.a,[]),t["\u0275mpd"](512,p["\u0275ba"],p["\u0275ba"],[]),t["\u0275mpd"](512,p.ReactiveFormsModule,p.ReactiveFormsModule,[]),t["\u0275mpd"](512,on.a,on.a,[]),t["\u0275mpd"](512,en.a,en.a,[]),t["\u0275mpd"](512,ln,ln,[]),t["\u0275mpd"](512,cn.r,cn.r,[[2,cn.w],[2,cn.o]]),t["\u0275mpd"](512,l,l,[]),t["\u0275mpd"](256,J.a,{showDelay:0,hideDelay:0,touchendHideDelay:1500},[]),t["\u0275mpd"](256,nn.a,!1,[]),t["\u0275mpd"](1024,R.a,function(){return[{types:[{name:"formly-group",component:un.a}]},{types:[{name:"input",component:rn.a,wrappers:["fieldset","label"]},{name:"checkbox",component:kn.a,wrappers:["fieldset"],defaultOptions:{templateOptions:{indeterminate:!0}}},{name:"radio",component:mn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}},{name:"select",component:dn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}},{name:"textarea",component:fn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{cols:1,rows:1}}},{name:"multicheckbox",component:yn.a,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{options:[]}}}],wrappers:[{name:"label",component:gn.a},{name:"description",component:bn.a},{name:"validation-message",component:Cn.a},{name:"fieldset",component:vn.a},{name:"addons",component:Fn.a}],manipulators:[{class:hn.a,method:"run"},{class:On.a,method:"run"},{class:wn.a,method:"run"}]},{types:[{name:"formly-group",component:un.a}]},{types:[{name:"button",component:O,wrappers:["fieldset","label"],defaultOptions:{templateOptions:{btnType:"default",type:"button"}}}]}]},[]),t["\u0275mpd"](1024,cn.m,function(){return[[{path:"",component:xn.a,data:e}]]},[])])})},xyKX:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> NgModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> CommonModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/common\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> ReactiveFormsModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyBootstrapModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/bootstrap\'</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> AppComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./app.component\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFieldButton <span class="token punctuation" >}</span> from <span class="token string" >\'./button-type.component\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >NgModule</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  imports<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    CommonModule<span class="token punctuation" >,</span>\n    ReactiveFormsModule<span class="token punctuation" >,</span>\n    FormlyBootstrapModule<span class="token punctuation" >,</span>\n    FormlyModule<span class="token punctuation" >.</span><span class="token function" >forRoot</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n      types<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n        <span class="token punctuation" >{</span>\n          name<span class="token punctuation" >:</span> <span class="token string" >\'button\'</span><span class="token punctuation" >,</span>\n          component<span class="token punctuation" >:</span> FormlyFieldButton<span class="token punctuation" >,</span>\n          wrappers<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token string" >\'fieldset\'</span><span class="token punctuation" >,</span> <span class="token string" >\'label\'</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n          defaultOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n            templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n              btnType<span class="token punctuation" >:</span> <span class="token string" >\'default\'</span><span class="token punctuation" >,</span>\n              type<span class="token punctuation" >:</span> <span class="token string" >\'button\'</span><span class="token punctuation" >,</span>\n            <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  declarations<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    AppComponent<span class="token punctuation" >,</span>\n    FormlyFieldButton<span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppModule</span> <span class="token punctuation" >{</span> <span class="token punctuation" >}</span>\n'}});